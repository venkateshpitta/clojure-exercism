(count "Venkatesh")
(count (range 5))
(count '(1 2 3))
(source filter)
(atom "Alice")
(keyword "Alice")
(take "Venkatesh" 3)
(take 3 "Venkatesh")
(drop 3 "Venkatesh")
(doc zipmap)
(clojure.string/split-lines "a\nb\nc\nd")
(let [[f-name l-name] (clojure.string/split-lines "Venkatesh\nPitta")]
(str f-name " " l-name))
(zipmap [1 2 3 4 5 6 7 8 9] [9 8 7 6 5 4 3 2 1])
(zipmap [1 2 3 4 5 6 7 8 9] [9 8 7 6 5 4 3 2 1] [0 0 0 0 0 0 0 0 0])
(nth 2 "Venkatesh")
(nth "Venkatesh" 2)
(doc partition)
(doc partial)
(map (partial partition 2) (clojure.string/split-lines "VGRCVRCG\nGVCRGCRV"))
(apply map concat (map (partial partition 2) (clojure.string/split-lines "VGRCVRCG\nGVCRGCRV")))

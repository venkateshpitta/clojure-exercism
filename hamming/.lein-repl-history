(def a "GGACG")
(def b "GGTCG")
(defn hamming [a b]
(defn hamming-helper [n1 n2 dis]
(if (not (= (count n1) (count n2))) nil)
(recur (rest n1) (rest n2) (+ dis (if (= (first n1) (first n2)) 1 0))))
(hamming-helper a b 0))
(hamming a b)
(first "Venkatesh")
(rest "Venkatesh")
(str (rest "Venkatesh"))
(apply str (rest "Venkatesh"))
(hamming "Venkaetsh" "venkatesh")
(ns hamming)
(distance "Venkatesh" "venkatesh")
(hamming/distance "Venkatesh" "venkatesh")
(import hamming)
(require hamming)
(ns hamming)
(hammming/distance "Venkatesh" "venkatesh")
(ns user)

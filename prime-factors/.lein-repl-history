(require 'clojure.math.numeric-tower)
(take-while #(condp = (mod % 6) 1 5) (range 4 20))
(range 4 20)
(take-while (fn [x] (or (= 1 (mod x 6)) (= 5 (mod x 6)))) (range 4 20))
(filter (fn [x] (or (= 1 (mod x 6)) (= 5 (mod x 6)))) (range 4 20))
(take-while #(or (= 1 (mod % 6)) (= 5 (mod % 6))) (range 4 20))
(filter (fn [x] (or (= 1 (mod x 6)) (= 5 (mod x 6)))) (range 4 20))
(filter #(or (= 1 (mod % 6)) (= 5 (mod % 6))) (range 4 20))
(clojure.math.numeric-tower/sqrt 16)
(clojure.math.numeric-tower/sqrt 17)
(clojure.math.numeric-tower/ceil (clojure.math.numeric-tower/sqrt 17))
(int (clojure.math.numeric-tower/ceil (clojure.math.numeric-tower/sqrt 17)))
(conj [] 1)
(conj 1 [])
(conj [] 1 2)
(sort (conj [] 1 2))
(even? 2)

(to-array-2d [[1 2 3] [4 5 6] [7 8 9]])
(def d2-array (to-array-2d [[1 2 3] [4 5 6] [7 8 9]]))
(aget d2-array 0)
(aget d2-array 0 0)
(aget d2-array 0 2)
(aget d2-array 0 1)
(aget d2-array 0 4)
(aget d2-array -1 0)
(seq "* * *")
(seq "* * *") (seq " * * ")
(to-array-2d (seq (seq "* * *") (seq " * * ")))
(to-array-2d (seq "* * *") (seq " * * "))
(to-array-2d (seq "* * *\n * * "))
(map seq (clojure.string/split-lines "* * *\n * * \n* * *\n * * "))
(to-array-2d (map seq (clojure.string/split-lines "* * *\n * * \n* * *\n * * ")))
(aget (to-array-2d (map seq (clojure.string/split-lines "* * *\n * * \n* * *\n * * "))) 0 0)
(doc alength)
(take 4 (repeat " "))
(join \newline (take 4 (repeat " ")))
(clojure.string/join \newline (take 4 (repeat " ")))
[1 2 :as pair]
[1 2 :as 'pair]
(second [2 3 4])
(doc nth)

(require 'grains)
(type (grains/square 64))
(type (grains/square 63))
(:reload)
(use grains :reload-all)
(use 'grains :reload-all)
(grains/square 64)
(grains/raise-2-to (biginteger 64))
(require 'clojure.contrib.math)
(require 'clojure.math.numeric-tower)
(clojure.math.numeric-tower/expt 2 64)
(reduce + (map (fn [p] (clojure.math.numeric-tower/expt 2 p)) (range 1 64)))
(doc reduce)
(reduce + 0 (map (fn [p] (clojure.math.numeric-tower/expt 2 p)) (range 1 64)))
(class (reduce + 0 (map (fn [p] (clojure.math.numeric-tower/expt 2 p)) (range 1 64))))
(class (biginteger 23))

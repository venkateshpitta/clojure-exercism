(conj [] 2)
(conj [] 2 3)
(cons 2 [])
(not (every? neg? '(1 -1 1 0 1 0)))
(doc some?)
(doc some)
(every? #(< % 2) '(1 2 1 0 1 0))
(doc any)
(doc any?)
(every? zero? '(0 0 0 0 0 0 0 0))
(< 2 2)
(< 10 2)
(filter neg? '(1))
(not (empty? (filter neg? '(1))))
(not (empty? (filter #(< % 2) '(1))))
(not (empty? (filter #(< 2 %) '(1))))
(not (empty? (filter #(< 2 %) '(1 2 1 0 1 0))))
(filter #(< 2 %) '(1 2 1 0 1 0))
(filter #(<= (dec 2) %) '(1 2 1 0 1 0))
(filter #(>= % 2) '(1 2 1 0 1 0))

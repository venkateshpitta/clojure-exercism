(condp = "a"
(or "a" "b") "yes"
:else "no")
(type "asdf")
(seq "asdfg")
(vec"asdfg")
(vec "asdfg")
(seq "a")
(require 'scrabble-score)
(scrabble-score/score-letter "a")
(scrabble-score/score-word "a")
(use scrabble-score :reload)
(use 'scrabble-score :reload)
(scrabble-score/score-letter \a)
(clojure.string/lower-case \a)
(clojure.string/lower-case "b")
(use 'scrabble-score :reload)
(map (comp scrabble-score/score-letter str) (seq "at"))
(map (comp scrabble-score/score-letter str) (seq "t"))
